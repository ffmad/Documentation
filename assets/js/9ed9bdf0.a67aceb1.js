(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{107:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(3),a=t(7),i=(t(0),t(126)),s={title:"How to send Counterparty assets in bulk"},o={unversionedId:"advanced/advanced-usage/sending-bulk",id:"advanced/advanced-usage/sending-bulk",isDocsHomePage:!1,title:"How to send Counterparty assets in bulk",description:"Below is a script for constructing, signing and broadcasting a large",source:"@site/docs/advanced/advanced-usage/sending-bulk.md",slug:"/advanced/advanced-usage/sending-bulk",permalink:"/docs/advanced/advanced-usage/sending-bulk",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/advanced/advanced-usage/sending-bulk.md",version:"current",sidebar:"advanced",previous:{title:"Command-line (CLI) Guide",permalink:"/docs/advanced/cli"},next:{title:"Using multisig with counterparty-server",permalink:"/docs/advanced/advanced-usage/multisig"}},c=[{value:"Script",id:"script",children:[]},{value:"CSV File",id:"csv-file",children:[]},{value:"Instructions",id:"instructions",children:[]}],d={toc:c};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Below is a script for constructing, signing and broadcasting a large\nnumber of sends efficiently. It assumes that the source addresses are in\na (temporarily) unlocked Bitcoin Core wallet, to which a running\ninstance of counterpartyd is connected."),Object(i.b)("p",null,"This script takes a single command-line argument of the CSV file from\nwhich to pull the sources, destinations, quantities, assets and fees."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Warning"),": This example is outdated as it used the previous addrindex bitcoin\nbranch, however, same principles apply to current mainline repo."),Object(i.b)("h2",{id:"script"},"Script"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"import csv\nimport sys\n\nfrom counterpartylib.lib import util\nfrom counterpartylib.lib import config\nfrom counterpartylib.lib.backend import addrindex\n\nconfig.BACKEND_URL = 'http://user:password@localhost:4000'\nconfig.BACKEND_SSL_NO_VERIFY = False\nconfig.TESTNET = False\nconfig.REQUESTS_TIMEOUT = 5\n\ndef counterparty_api(method, params):\n    return util.api(method, params)\n\ndef bitcoin_api(method, params):\n    return addrindex.rpc(method, params)\n\ndef do_send(source, destination, asset, quantity, fee, encoding):\n    validateaddress = bitcoin_api('validateaddress', [source])\n    assert validateaddress['ismine']\n    pubkey = validateaddress['pubkey']\n    unsigned_tx = counterparty_api('create_send', {'source': source, 'destination': destination, 'asset': asset, 'quantity': quantity, 'pubkey': pubkey, 'allow_unconfirmed_inputs': True})\n    signed_tx = bitcoin_api('signrawtransaction', [unsigned_tx])['hex']\n    tx_hash = bitcoin_api('sendrawtransaction', [signed_tx])\n    return tx_hash\n\n\nwith open(sys.argv[1], 'r') as csvfile:\n      reader = csv.reader(csvfile)\n      print('{}|{}|{}'.format('linenum', 'input', 'result'))\n\n      for row in reader:\n            if reader.line_num == 1:                                            \n                  continue                                                        \n\n            source, destination, asset, quantity, fee = row\n            fee, quantity = int(fee), int(quantity)\n\n            try:\n                  tx_hash = do_send(source, destination, asset, quantity, fee, 'opreturn')\n            except Exception as e:\n                  tx_hash = str(e)\n\n            print('{}|{}|{}'.format(reader.line_num, ','.join(row), tx_hash))\n")),Object(i.b)("h2",{id:"csv-file"},"CSV File"),Object(i.b)("p",null,"All quantities are specified in satoshis. The format of the CSV file is as follows:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"  source,destination,asset,quantity,fee\n  mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns,mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns,XCP,100000000,150\n  mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns,mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns,XCP,200000000,100\n")),Object(i.b)("h2",{id:"instructions"},"Instructions"),Object(i.b)("p",null,"Use this script on a system with ",Object(i.b)("inlineCode",{parentName:"p"},"counterparty-lib")," installed and in the ",Object(i.b)("inlineCode",{parentName:"p"},"PYTHONPATH"),". (If using a Federated Node, this is possible by issuing the command ",Object(i.b)("inlineCode",{parentName:"p"},"fednode shell counterparty")," or ",Object(i.b)("inlineCode",{parentName:"p"},"fednode shell counterparty-testnet")," as appropriate, and using the script in that shell.)"),Object(i.b)("p",null,"If the CSV file with the data is called input.csv, and the script is\ncalled sendmany.py, then call this script with\n",Object(i.b)("inlineCode",{parentName:"p"},"$ python3 sendmany.py input.csv"),"."))}u.isMDXComponent=!0},126:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return f}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=a.a.createContext({}),u=function(e){var n=a.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=u(e.components);return a.a.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),l=u(t),b=r,f=l["".concat(s,".").concat(b)]||l[b]||p[b]||i;return t?a.a.createElement(f,o(o({ref:n},d),{},{components:t})):a.a.createElement(f,o({ref:n},d))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=b;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var d=2;d<i;d++)s[d]=t[d];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);