(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{121:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return b})),a.d(t,"default",(function(){return o}));var n=a(3),r=a(7),s=(a(0),a(126)),i={title:"Counterblock API"},l={unversionedId:"develop/counterblock/api",id:"develop/counterblock/api",isDocsHomePage:!1,title:"Counterblock API",description:"For an overview of counterblock, see here.",source:"@site/docs/develop/counterblock/api.md",slug:"/develop/counterblock/api",permalink:"/docs/develop/counterblock/api",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/develop/counterblock/api.md",version:"current",sidebar:"develop",previous:{title:"API Changes",permalink:"/docs/develop/api/api-changes"},next:{title:"Writing counterblock Plug-in Modules",permalink:"/docs/develop/counterblock/modules"}},b=[{value:"Connecting to the API",id:"connecting-to-the-api",children:[]},{value:"Terms &amp; Conventions",id:"terms--conventions",children:[]},{value:"core API",id:"core-api",children:[{value:"get_messagefeed_messages_by_index",id:"get_messagefeed_messages_by_index",children:[]},{value:"get_chain_block_height",id:"get_chain_block_height",children:[]},{value:"get_insight_block_info",id:"get_insight_block_info",children:[]},{value:"get_chain_address_info",id:"get_chain_address_info",children:[]},{value:"get_chain_txns_status",id:"get_chain_txns_status",children:[]},{value:"get_last_n_messages",id:"get_last_n_messages",children:[]},{value:"get_pubkey_for_address",id:"get_pubkey_for_address",children:[]},{value:"get_script_pub_key",id:"get_script_pub_key",children:[]},{value:"get_raw_transactions",id:"get_raw_transactions",children:[]}]},{value:"assets Module API",id:"assets-module-api",children:[{value:"get_normalized_balances",id:"get_normalized_balances",children:[]},{value:"get_escrowed_balances",id:"get_escrowed_balances",children:[]},{value:"get_assets_info",id:"get_assets_info",children:[]},{value:"get_base_quote_asset",id:"get_base_quote_asset",children:[]},{value:"get_owned_assets",id:"get_owned_assets",children:[]},{value:"get_asset_pair_market_info",id:"get_asset_pair_market_info",children:[]},{value:"get_asset_extended_info",id:"get_asset_extended_info",children:[]},{value:"get_asset_history",id:"get_asset_history",children:[]},{value:"get_balance_history",id:"get_balance_history",children:[]}]},{value:"dex Module",id:"dex-module",children:[{value:"get_market_price_summary",id:"get_market_price_summary",children:[]},{value:"get_market_cap_history",id:"get_market_cap_history",children:[]},{value:"get_market_info",id:"get_market_info",children:[]},{value:"get_market_info_leaderboard",id:"get_market_info_leaderboard",children:[]},{value:"get_market_price_history",id:"get_market_price_history",children:[]},{value:"get_trade_history",id:"get_trade_history",children:[]},{value:"get_order_book_simple",id:"get_order_book_simple",children:[]},{value:"get_order_book_buysell",id:"get_order_book_buysell",children:[]},{value:"get_users_pairs",id:"get_users_pairs",children:[]},{value:"get_market_orders",id:"get_market_orders",children:[]},{value:"get_market_trades",id:"get_market_trades",children:[]},{value:"get_markets_list",id:"get_markets_list",children:[]},{value:"get_market_details",id:"get_market_details",children:[]}]},{value:"betting Module",id:"betting-module",children:[{value:"get_bets",id:"get_bets",children:[]},{value:"get_user_bets",id:"get_user_bets",children:[]},{value:"get_feed",id:"get_feed",children:[]},{value:"get_feeds_by_source",id:"get_feeds_by_source",children:[]},{value:"parse_base64_feed",id:"parse_base64_feed",children:[]}]},{value:"counterwallet Module",id:"counterwallet-module",children:[{value:"is_ready",id:"is_ready",children:[]},{value:"get_reflected_host_info",id:"get_reflected_host_info",children:[]},{value:"get_wallet_stats",id:"get_wallet_stats",children:[]},{value:"get_preferences",id:"get_preferences",children:[]},{value:"store_preferences",id:"store_preferences",children:[]},{value:"create_armory_utx",id:"create_armory_utx",children:[]},{value:"convert_armory_signedtx_to_raw_hex",id:"convert_armory_signedtx_to_raw_hex",children:[]},{value:"create_support_case",id:"create_support_case",children:[]}]},{value:"counterwallet_iofeeds Module",id:"counterwallet_iofeeds-module",children:[{value:"get_num_users_online",id:"get_num_users_online",children:[]},{value:"is_chat_handle_in_use",id:"is_chat_handle_in_use",children:[]},{value:"get_chat_handle",id:"get_chat_handle",children:[]},{value:"store_chat_handle",id:"store_chat_handle",children:[]},{value:"get_chat_history",id:"get_chat_history",children:[]},{value:"is_wallet_online",id:"is_wallet_online",children:[]}]},{value:"transaction_stats Module",id:"transaction_stats-module",children:[{value:"get_transaction_stats",id:"get_transaction_stats",children:[]}]},{value:"API Changes",id:"api-changes",children:[{value:"1.2.0",id:"120",children:[]},{value:"1.1.0",id:"110",children:[]}]}],c={toc:b};function o(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"For an overview of ",Object(s.b)("inlineCode",{parentName:"p"},"counterblock"),", see ",Object(s.b)("a",{parentName:"p",href:"http://counterparty.io/docs/platform_architecture/"},"here"),"."),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"counterblock")," release information is available from ",Object(s.b)("a",{parentName:"p",href:"https://github.com/CounterpartyXCP/counterblock/releases"},"this link"),"."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Warning:")," ",Object(s.b)("em",{parentName:"p"},"This API documentation is INCOMPLETE. It contains errors, omissions, etc., and could change drastically at any time.")),Object(s.b)("h2",{id:"connecting-to-the-api"},"Connecting to the API"),Object(s.b)("p",null,"By default, ",Object(s.b)("inlineCode",{parentName:"p"},"counterblock")," will listen on port ",Object(s.b)("inlineCode",{parentName:"p"},"4100")," for API\nrequests. API requests are made via a HTTP POST request to ",Object(s.b)("inlineCode",{parentName:"p"},"/api/"),", with JSON-encoded\ndata passed as the POST body. For more information on JSON RPC, please see the ",Object(s.b)("a",{parentName:"p",href:"http://json-rpc.org/wiki/specification"},"JSON RPC specification"),"."),Object(s.b)("h2",{id:"terms--conventions"},"Terms & Conventions"),Object(s.b)("p",null,"The API calls documented are categorized based on the ",Object(s.b)("inlineCode",{parentName:"p"},"counterblock")," module/plug-in they appear in. For a list of the various modules with a description of each one, see ",Object(s.b)("a",{parentName:"p",href:"modules"},"the counterblock modules document"),"."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Return Types")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"[ ]")," indicates a list of one or more items, the structure will be detailed inside the brackets if regular."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"{ }")," indicates a hash/object with the keys indicated"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"'id'")," means a key named id."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"<id>")," means the key is based on some parameter. This will usually be based on the inputs to the function (for example a search parameter)"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"('key')")," means an optional key that may or may not be present in the output. Usually configured by a parameter.")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"wallet IDs")),Object(s.b)("p",null,"An individual Counterwallet user needs a way to identify themselves to ",Object(s.b)("inlineCode",{parentName:"p"},"counterblock")," for things like storing\nand retrieving their wallet preferences data, and more."),Object(s.b)("p",null,"For this purpose, we define the concept of a wallet ID, which is simply the user's Counterwallet 12-word password,\ndouble-hashed with SHA256 and converted to base 64."),Object(s.b)("h2",{id:"core-api"},"core API"),Object(s.b)("p",null,"These API methods are part of the core ",Object(s.b)("inlineCode",{parentName:"p"},"counterblock")," code, and not part of a plugin module."),Object(s.b)("h3",{id:"get_messagefeed_messages_by_index"},"get_messagefeed_messages_by_index"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_messagefeed_messages_by_index(message_indexes)")),Object(s.b)("p",null,"Alias for counterpartyd get_messages_by_index"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param list message_indexs:")," Message IDs to fetch"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," A list of messages")),Object(s.b)("h3",{id:"get_chain_block_height"},"get_chain_block_height"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_chain_block_height()")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"deprecated: 1.5"),"\nUse ",Object(s.b)("inlineCode",{parentName:"p"},"get_chain_address_info")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," The height of the block chain")),Object(s.b)("h3",{id:"get_insight_block_info"},"get_insight_block_info"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_insight_block_info(block_hash)")),Object(s.b)("p",null,"Get block info for a specific block hash from the backend (insight, bitcoind, etc)."),Object(s.b)("h3",{id:"get_chain_address_info"},"get_chain_address_info"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_chain_address_info(addresses, with_uxtos=True, with_last_txn_hashes=4)")),Object(s.b)("p",null,"Get info for one or more addresses"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"parameter list addresses:")," Address to query"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"parameter boolean with_uxtos:")," Include Unspent"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"parameter int with_last_txn_hashes:")," Include n recent confirmed transactions"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Address info"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'addr', 'info',('uxto'),('last_txns'),('block_height')}]")),Object(s.b)("h3",{id:"get_chain_txns_status"},"get_chain_txns_status"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_chain_txns_status")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param list txn_hashes:")," A list of one or more txn hashes"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Transaction information"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'tx_hash', 'blockhash', 'confirmations', 'blocktime'}]")),Object(s.b)("h3",{id:"get_last_n_messages"},"get_last_n_messages"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_last_n_messages(count=100)")),Object(s.b)("p",null,"Return latest messaages"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param int count:")," Number of messages to return. Must be < 1000 if specified."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," A list of messages"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'raw_tx_type', ... other fields vary per tx type}]")),Object(s.b)("h3",{id:"get_pubkey_for_address"},"get_pubkey_for_address"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_pubkey_for_address(address)")),Object(s.b)("p",null,"Returns None if the address has made 0 transactions (as we wouldn't be able to get the public key)"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"returns:")," String or None")),Object(s.b)("h3",{id:"get_script_pub_key"},"get_script_pub_key"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_script_pub_key(tx_hash, vout_index)")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"broadcast_tx(signed_tx_hex)")),Object(s.b)("h3",{id:"get_raw_transactions"},"get_raw_transactions"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_raw_transactions(address, start_ts=None, end_ts=None, limit=500):")),Object(s.b)("p",null,"Gets raw transactions for a particular address"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param address:")," A single address string"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param start_ts:")," The starting date & time. Should be a unix epoch object. If passed as None, defaults to 60 days before the end_date"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param end_ts:")," The ending date & time. Should be a unix epoch object. If passed as None, defaults to the current date & time"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param limit:")," the maximum number of transactions to return; defaults to ten thousand"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Returns the data, ordered from newest txn to oldest. If any limit is applied, it will cut back from the oldest results"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {id: {status, tx_hash, _divisible, _tx_index, block_index, _category, destination, tx_index, _block_time, source, asset, _command, quantity}}")),Object(s.b)("p",null,"####proxy_to_counterpartyd"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"proxy_to_counterpartyd(method='', params={})")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param method:")," Method name to call in counterpartyd."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param params:")," Array of function parameters."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"returns:")," The method response from counterpartyd")),Object(s.b)("p",null,"Relays a request to the counterpartyd server, with the given method and params, and returns the result. See the API documentation for available methods."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"NOTE:")," This method may be depreciated/removed in the future."),Object(s.b)("h2",{id:"assets-module-api"},"assets Module API"),Object(s.b)("h3",{id:"get_normalized_balances"},"get_normalized_balances"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_normalized_balances(addresses)")),Object(s.b)("p",null,"This call augments counterparty's get_balances with a normalized_quantity field. It also will include any owned assets for an address, even if their balance is zero. NOTE: Does not retrieve BTC balance. Use get_address_info for that."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param addresses:")," The addresses to retrieve balances on"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Balances are returned as a list of dicts, with each dict having the following structure:",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"address: The address with the asset balance"),Object(s.b)("li",{parentName:"ul"},'asset: The asset (e.g. "XCP")'),Object(s.b)("li",{parentName:"ul"},"owner: Set to True if this address is the owner of the asset"),Object(s.b)("li",{parentName:"ul"},"quantity: The quantity in satoshi"),Object(s.b)("li",{parentName:"ul"},"normalized_quantity: The quantity, as a human readable number ")))),Object(s.b)("h3",{id:"get_escrowed_balances"},"get_escrowed_balances"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_escrowed_balances(addresses)")),Object(s.b)("p",null,"Gets a list of address balances that are escrowed away by the protocol (either due to an open trade or bet)."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param list addresses:")," List of addresses to check"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," An array of assets held in escrow"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ",Object(s.b)("inlineCode",{parentName:"li"},"{<address of escrowee>:{<asset>:<amount>}}"))),Object(s.b)("h3",{id:"get_assets_info"},"get_assets_info"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_assets_info(assetsList)")),Object(s.b)("p",null,"Returns information on the specified assets."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param assetsList"),": A list of one or more asset names."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," A list of dicts, one dict for each asset provided in ",Object(s.b)("inlineCode",{parentName:"li"},"assetsList"),":",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},'asset: The name of the asset (e.g. "XCP")'),Object(s.b)("li",{parentName:"ul"},"owner: The address of the current owner of the asset"),Object(s.b)("li",{parentName:"ul"},"divisible: True if the asset is divisible, False otherwise"),Object(s.b)("li",{parentName:"ul"},"locked: True if the asset is locked, False otherwise"),Object(s.b)("li",{parentName:"ul"},"supply: The current supply of the asset"),Object(s.b)("li",{parentName:"ul"},"description: The asset's current description"),Object(s.b)("li",{parentName:"ul"},"issuer: The issuing address of the asset")))),Object(s.b)("h3",{id:"get_base_quote_asset"},"get_base_quote_asset"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_base_quote_asset(asset1, asset2)")),Object(s.b)("p",null,"Given two arbitrary assets, returns the base asset and the quote asset."),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"deprecated: 1.5"),"\nUse ",Object(s.b)("inlineCode",{parentName:"p"},"get_market_info/get_market_details")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset1:")," An asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset2:")," An asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Array"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ",Object(s.b)("inlineCode",{parentName:"li"},"{'base_asset', 'quote_asset', 'pair_name'}"))),Object(s.b)("h3",{id:"get_owned_assets"},"get_owned_assets"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_owned_assets(addresses)")),Object(s.b)("p",null,"Returns the assets owned by the addresses"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param addresses:")," An array of addresses."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Information on owned assets"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," [{'_change_type', 'locked', 'description', '_at_block', 'divisible', 'total_issued_normalized', '_at_block_time', 'asset', 'total_issued', 'owner', history:[]]")),Object(s.b)("h3",{id:"get_asset_pair_market_info"},"get_asset_pair_market_info"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_asset_pair_market_info(asset1=None, asset2=None, limit=50):")),Object(s.b)("p",null," ",Object(s.b)("em",{parentName:"p"},"deprecated: 1.5"),"\nUse ",Object(s.b)("inlineCode",{parentName:"p"},"get_market_details/get_market_info")),Object(s.b)("p",null,"Given two arbitrary assets, returns the base asset and the quote asset."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset1:")," First asset name"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset2:")," Second asset name"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param limit:")," Max # of records to return"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Market info for the given pair"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {'24h_vol_in_btc', 'open_orders_count', 'lowest_ask', 'base_asset', 'completed_trades_count', '24h_pct_change', 'vol_quote', 'highest_bid', '24h_vol_in_xcp', 'vol_base', 'last_updated', 'quote_asset'}")),Object(s.b)("h3",{id:"get_asset_extended_info"},"get_asset_extended_info"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_asset_extended_info(asset)")),Object(s.b)("p",null,"Returns extended asset data (i.e. that published via an external .json file, as documented ",Object(s.b)("a",{parentName:"p",href:"http://counterparty.io/docs/enhanced_asset_info/"},"here"),"), if available, for a specific asset."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset:"),' The name of the asset (e.g. "XCP")'),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Information on the asset or False if no extended info exists. Contains the data as documented in the extended asset info JSON format, among other fields."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {}")),Object(s.b)("h3",{id:"get_asset_history"},"get_asset_history"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_asset_history(asset, reverse=False")),Object(s.b)("p",null,"Returns a list of changes for the specified asset, from its inception to the current time."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset:")," The asset to retrieve a history on"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param reverse:")," By default, the history is returned in the order of oldest to newest. Set this parameter to True to return items in the order of newest to oldest."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Changes are returned as a list of dicts, with each dict having the following format:",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"type: One of 'created', 'issued_more', 'changed_description', 'locked', 'transferred', 'called_back'"),Object(s.b)("li",{parentName:"ul"},"'at_block': The block number this change took effect"),Object(s.b)("li",{parentName:"ul"},"'at_block_time': The block time this change took effect"),Object(s.b)("li",{parentName:"ul"},"IF type = 'created': Has the following fields, as specified when the asset was initially created:",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"owner, description, divisible, locked, total_issued, total_issued_normalized"))),Object(s.b)("li",{parentName:"ul"},"IF type = 'issued_more':",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"'additional': The additional quantity issued (raw)"),Object(s.b)("li",{parentName:"ul"},"'additional_normalized': The additional quantity issued (normalized)"),Object(s.b)("li",{parentName:"ul"},"'total_issued': The total issuance after this change (raw)"),Object(s.b)("li",{parentName:"ul"},"'total_issued_normalized': The total issuance after this change (normalized)"))),Object(s.b)("li",{parentName:"ul"},"IF type = 'changed_description':",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"'prev_description': The old description"),Object(s.b)("li",{parentName:"ul"},"'new_description': The new description"))),Object(s.b)("li",{parentName:"ul"},"IF type = 'locked': NO EXTRA FIELDS"),Object(s.b)("li",{parentName:"ul"},"IF type = 'transferred':",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"'prev_owner': The address the asset was transferred from"),Object(s.b)("li",{parentName:"ul"},"'new_owner': The address the asset was transferred to"))),Object(s.b)("li",{parentName:"ul"},"IF type = 'called_back':",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"'percentage': The percentage of the asset called back (between 0 and 100)")))))),Object(s.b)("h3",{id:"get_balance_history"},"get_balance_history"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_balance_history(asset, addresses, normalize=True, start_ts=None, end_ts=None)")),Object(s.b)("p",null,"Retrieves the ordered balance history for a given address (or list of addresses) and asset pair, within the specified date range"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param normalize:")," If set to True, return quantities that (if the asset is divisible) have been divided by 100M (satoshi)."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," A list of tuples, with the first entry of each tuple being the block time (epoch TS), and the second being the new balance at that block time."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ",Object(s.b)("inlineCode",{parentName:"li"},"[<block time>, <balance>]"))),Object(s.b)("h2",{id:"dex-module"},"dex Module"),Object(s.b)("h3",{id:"get_market_price_summary"},"get_market_price_summary"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_market_price_summary(asset1, asset2, with_last_trades=0)")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"deprecated: 1.5"),"\nUse ",Object(s.b)("inlineCode",{parentName:"p"},"get_market_price_history")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset1:")," An asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset2:")," An asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param with_last_trades:")," Include last trades"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Array"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {'quote_asset', 'base_asset', 'market_price',('last_trades')}")),Object(s.b)("h3",{id:"get_market_cap_history"},"get_market_cap_history"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_market_cap_history(start_ts=None, end_ts=None)")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param start_ts:")," Unix timestamp (defaults to 30 days before the end timestamp)"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param end_ts:")," Unix timestamp (defaults to current timestamp)"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Array"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ",Object(s.b)("inlineCode",{parentName:"li"},"{'base_currency':[{'data':[ts,market_cap], 'name'}]}"))),Object(s.b)("h3",{id:"get_market_info"},"get_market_info"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_market_info(assets)")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param list assets:")," Assets to check"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Array"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {'24h_hlc_in_btc', 'extended_description', 'extended_pgpsig', 'aggregated_price_as_btc', 'price_in_btc', '24h_summary':{'vol', 'count'}, 'market_cap_in_btc', 'asset', 'price_as_xcp', '7d_history_in_btc':[","[ts, price]","], '24h_vol_price_change_in_xcp', 'price_in_xcp', 'extended_website', '24h_vol_price_change_in_btc', 'aggregated_price_as_xcp', 'market_cap_in_xcp', '7d_history_in_xcp':[","[ts, price]","], 'aggregated_price_in_btc', 'aggregated_price_in_xcp', 'price_as_btc', 'total_supply', '24h_ohlc_xcp', 'extended_image'}")),Object(s.b)("h3",{id:"get_market_info_leaderboard"},"get_market_info_leaderboard"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_market_info_leaderboard(limit=100)")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param limit:")," Number of results to return"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Array"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {base_currency:","[{\n'24h_ohlc_in_btc',\n'total_supply',\n'aggregated_price_in_btc',\n'price_in_btc',\n'24h_vol_price_change_in_xcp',\n'aggregated_price_in_xcp',\n'24h_summary: {'vol', 'count'},\n'price_in_xcp',\n'price_as_btc',\n'market_cap_in_btc',\n'24h_ohlc_in_xcp',\n'24h_vol_price_change_in_btc',\n'aggregated_price_as_xcp',\n'market_cap_in_xcp',\n'asset',\n'price_as_xcp',\n'7d_history_in_xcp',\n'7d_history_in_btc',\n'aggregated_price_as_btc'}]","}")),Object(s.b)("h3",{id:"get_market_price_history"},"get_market_price_history"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_market_price_history(asset1, asset2, start_ts=None, end_ts=None, as_dict=False)")),Object(s.b)("p",null,"Return block-by-block aggregated market history data for the specified asset pair, within the specified date range."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset1:")," An asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset2:")," An asset                            ."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param start_ts:"),"  Unix timestamp (defaults to 30 days before the end timestamp) "),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param end_ts:")," Unix timestamp (defaults to current timestamp)"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param as_dict:")," Return as list of list or list of dicts"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," List of lists or dicts"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'block_time', 'block_index', 'open', 'high', 'low', 'close', 'vol', 'count'}]")),Object(s.b)("h3",{id:"get_trade_history"},"get_trade_history"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_trade_history(asset1=None, asset2=None, start_ts=None, end_ts=None, limit=50)")),Object(s.b)("p",null,"Gets last N of trades within a specific date range (normally, for a specified asset pair, but this can be left blank to get any/all trades)."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset1:")," An asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset2:")," An asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param start_ts:")," Unix timestamp"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param end_ts:")," Unix timestamp"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param limit:")," Number of trades to return"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Array of length ",Object(s.b)("inlineCode",{parentName:"li"},"n")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'base_quantity',\n'message_index',\n'order_match_tx1_index',\n'base_asset',\n'quote_quantity',\n'order_match_tx0_address',\n'unit_price',\n'base_quantity_normalized',\n'block_index',\n'block_time',\n'quote_quantity_normalized',\n'unit_price_inverse',\n'order_match_tx0_index',\n'order_match_id',\n'order_match_tx1_address',\n'quote_asset'}]")),Object(s.b)("h3",{id:"get_order_book_simple"},"get_order_book_simple"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_order_book_simple(asset1, asset2, min_pct_fee_provided=None, max_pct_fee_required=None)")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"deprecated: 1.5"),"\nUse counterparty-server's ",Object(s.b)("inlineCode",{parentName:"p"},"get_orders")),Object(s.b)("p",null,"Easier to call version when you want all orders involving the two assets."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset1:")," Asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param asset2:")," Asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param pct_fee_provided:")," A minimum fee level in satoshis"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param pct_fee_required:")," A minimum fee level in satoshis"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Object"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {'base_bid_book':","[{'count', 'depth', 'unit_price', 'quantity'}]",",\n'bid_depth',\n'raw_orders:","[{\n'status',\n'tx_hash',\n'give_quantity',\n'_is_online',\n'fee_provided',\n'source',\n'give_asset',\n'expire_index',\n'fee_required_remaining',\n'block_index',\n'tx_index',\n'give_remaining',\n'block_time',\n'get_asset',\n'expiration',\n'fee_required',\n'get_remaining',\n'get_quantity',\n'fee_provided_remaining'}]",",\n'bid_ask_median',\n'quote_asset',\n'base_asset',\n'ask_depth',\n'bid_ask_spread',\n'base_ask_book':","[{'count', 'depth', 'unit_price', 'quantity'}]",",\n'id'}")),Object(s.b)("h3",{id:"get_order_book_buysell"},"get_order_book_buysell"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_order_book_buysell(buy_asset, sell_asset, pct_fee_provided=None, pct_fee_required=None)")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"deprecated: 1.5"),"\nUse counterparty-server's ",Object(s.b)("inlineCode",{parentName:"p"},"get_orders")," "),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param buy_asset:")," Asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param sell_asset:")," Asset"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param pct_fee_provided:")," A minimum fee level in satoshis"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param pct_fee_required:")," A minimum fee level in satoshis"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Object"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {'base_bid_book':","[{'count', 'depth', 'unit_price', 'quantity'}]",",\n'bid_depth',\n'raw_orders:","[{\n'status',\n'tx_hash',\n'give_quantity',\n'_is_online',\n'fee_provided',\n'source',\n'give_asset',\n'expire_index',\n'fee_required_remaining',\n'block_index',\n'tx_index',\n'give_remaining',\n'block_time',\n'get_asset',\n'expiration',\n'fee_required',\n'get_remaining',\n'get_quantity',\n'fee_provided_remaining'}]",",\n'bid_ask_median',\n'quote_asset',\n'base_asset',\n'ask_depth',\n'bid_ask_spread',\n'base_ask_book':","[{'count', 'depth', 'unit_price', 'quantity'}]",",\n'id'}")),Object(s.b)("h3",{id:"get_users_pairs"},"get_users_pairs"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_users_pairs(addresses=[], max_pairs=12)")),Object(s.b)("p",null,"Return asset pairs held by the addresses."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'base_asset', 'progression', 'trend', 'price_24h', 'price', 'quote_asset'}]")),Object(s.b)("h3",{id:"get_market_orders"},"get_market_orders"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_market_orders(asset1, asset2, addresses=[], min_fee_provided=0.95, max_fee_required=0.95)")),Object(s.b)("p",null,"Returns orders for the search parameters"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'completion', 'tx_hash', 'fee_provided', 'block_index', 'price', 'tx_index', 'source', 'amount', 'block_time', 'total', 'type'}]")),Object(s.b)("h3",{id:"get_market_trades"},"get_market_trades"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_market_trades(asset1, asset2, addresses=[], limit=100)")),Object(s.b)("p",null,"Returns completed trades for the search parameters"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'status', 'match_id', 'countersource', 'block_index', 'price', 'source', 'amount', 'block_time', 'total', 'type'}]")),Object(s.b)("h3",{id:"get_markets_list"},"get_markets_list"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_markets_list()")),Object(s.b)("p",null,"Returns available markets"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'market_cap', 'base_asset', 'progression', 'supply', 'trend', 'price_24h', 'price', ' quote_divisibility', 'pos', 'volume', 'with_image', 'base_divisibility', 'quote_asset'}]")),Object(s.b)("h3",{id:"get_market_details"},"get_market_details"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_market_details(asset1, asset2, min_fee_provided=0.95, max_fee_required=0.95)")),Object(s.b)("p",null,"Return detailed information on a market."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {'base_asset','progression','supply', 'trend','price_24h', 'price','sell_orders': ","[{'fee_required', 'amount', 'total', 'type', 'price'}]",",'quote_asset_divisible','buy_orders': ","[{'amount', 'total', 'type', 'price', 'fee_provided'}]",", 'last_trades': ","[{'status', 'match_id', 'countersource', 'source', 'price', 'block_index', 'amount', 'block_time', 'total', 'type'}]",",'base_asset_infos','base_asset_divisible','quote_asset'}")),Object(s.b)("h2",{id:"betting-module"},"betting Module"),Object(s.b)("h3",{id:"get_bets"},"get_bets"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_bets(bet_type, feed_address, deadline, target_value=None, leverage=5040)")),Object(s.b)("p",null,"Returns bets with non-zero remaining counterwager for the specified search terms."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param bet_type:")," 0, 1, 2 or 3"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param feed_address:")," An address"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param deadline:")," Unix timestamp"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'tx_hash'\n'feed_address',\n'wager_quantity',\n'leverage',\n'source',\n'expire_index',\n'status',\n'tx_index',\n'block_index',\n'counterwager_quantity',\n'deadline',\n'expiration',\n'fee_fraction_int',\n'bet_type',\n'counterwager_remaining',\n'wager_remaining',\n'target_value'\n}]")),Object(s.b)("h3",{id:"get_user_bets"},"get_user_bets"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},'get_user_bets(addresses=[], status="open")')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param addresses:")," List of addresses"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param status:"),' "open", "filled","expired","cancelled","dropped", or "invalid"'),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'tx_hash'\n'feed_address',\n'wager_quantity',\n'leverage',\n'source',\n'expire_index',\n'status',\n'tx_index',\n'block_index',\n'counterwager_quantity',\n'deadline',\n'expiration',\n'fee_fraction_int',\n'bet_type',\n'counterwager_remaining',\n'wager_remaining',\n'target_value'\n}]")),Object(s.b)("h3",{id:"get_feed"},"get_feed"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_feed(address_or_url='')")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param address_or_url:")," Feed URL or Bitcoin Address"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {'broadcasts':","[{'status', 'tx_hash', 'locked', 'timestamp', 'source', 'text', 'tx_index', 'value', 'block_index', 'fee_fraction_int'}]",", 'counters':{'bets':[]}")),Object(s.b)("h3",{id:"get_feeds_by_source"},"get_feeds_by_source"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_feeds_by_source(addresses=[])")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param addresses:")," Address list"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ",Object(s.b)("inlineCode",{parentName:"li"},"{<address>:{'errors':[], 'locked', 'info_url', 'info_data':{}, 'fetch_info_retry', 'source', 'info_status', 'fee_fraction_int', 'last_broadcast':{}}}"))),Object(s.b)("h3",{id:"parse_base64_feed"},"parse_base64_feed"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"parse_base64_feed(base64_feed):")),Object(s.b)("p",null,"Takes a base64-encoded feed and decodes it."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," ","[{'tx_hash'\n'feed_address',\n'wager_quantity',\n'leverage',\n'source',\n'expire_index',\n'status',\n'tx_index',\n'block_index',\n'counterwager_quantity',\n'deadline',\n'expiration',\n'fee_fraction_int',\n'bet_type',\n'counterwager_remaining',\n'wager_remaining',\n'target_value'\n}]")),Object(s.b)("h2",{id:"counterwallet-module"},"counterwallet Module"),Object(s.b)("h3",{id:"is_ready"},"is_ready"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"is_ready()")),Object(s.b)("p",null,"Used by the client to check if the server is alive, caught up, and ready to accept requests.\nIf the server is NOT caught up, a 525 error will be returned actually before hitting this point. Thus,\nif we actually return data from this function, it should always be true. (may change this behaviour later)"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," Boolean")),Object(s.b)("h3",{id:"get_reflected_host_info"},"get_reflected_host_info"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_reflected_host_info()")),Object(s.b)("p",null,"Allows the requesting host to get some info about itself, such as its IP. Used for troubleshooting."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Client host info"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {'ip', 'cookie', 'country'}")),Object(s.b)("h3",{id:"get_wallet_stats"},"get_wallet_stats"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_wallet_stats(start_ts=None, end_ts=None):")),Object(s.b)("p",null,"If timestamps omitted, queries the last 360 days."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param start_ts:")," Unix timestamp"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param end_ts:")," Unix timestamp"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," Wallet information"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {'wallet_stats':[id: {'data': ","[{}]",", 'name'}], 'num_wallets_testnet', 'num_wallets_mainnet', 'num_wallets_unknown'}")),Object(s.b)("h3",{id:"get_preferences"},"get_preferences"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_preferences(wallet_id, for_login=False, network=None)")),Object(s.b)("p",null,"Gets stored wallet preferences"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param network:")," only required if for_login is specified. One of: 'mainnet' or 'testnet'"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"returns:")," A wallet preferences object:",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"num_addresses_used")," (",Object(s.b)("em",{parentName:"li"},"integer"),"): The number of addresses utilized in the user's wallet (this\ndetermines how many addresses we will deterministally generate when the user logs in)."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"address_aliases")," (",Object(s.b)("em",{parentName:"li"},"list"),"): A list of zero or objects, with each object having an ",Object(s.b)("inlineCode",{parentName:"li"},"address")," string property,\nbeing the Bitcoin base56 address, and an ",Object(s.b)("inlineCode",{parentName:"li"},"alias")," string property, being the textual alias (i.e. nickname)\nfor this address. Using aliases helps make the wallet more user-friendly."))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," Boolean")),Object(s.b)("h3",{id:"store_preferences"},"store_preferences"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"store_preferences(wallet_id, preferences)")),Object(s.b)("p",null,"Stores the preferences for a given wallet ID."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param string wallet_id:")," The wallet ID to store the preferences for."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param object preferences:")," A wallet preferences object (see above)"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," ",Object(s.b)("inlineCode",{parentName:"li"},"true")," if the storage was successful, ",Object(s.b)("inlineCode",{parentName:"li"},"false")," otherwise.")),Object(s.b)("h3",{id:"create_armory_utx"},"create_armory_utx"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"create_armory_utx(unsigned_tx_hex, public_key_hex)")),Object(s.b)("p",null,"Used to create an offline Armory transaction for signing in Armory."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"returns:")," The signed tx hash"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," String")),Object(s.b)("h3",{id:"convert_armory_signedtx_to_raw_hex"},"convert_armory_signedtx_to_raw_hex"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"convert_armory_signedtx_to_raw_hex(signed_tx_ascii)")),Object(s.b)("p",null,"Used to convert a signed armory transaction to a hex-encoded raw transaction suitable for broadcasting on the Bitcoin network."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"returns:")," The raw hash as hex"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," String")),Object(s.b)("h3",{id:"create_support_case"},"create_support_case"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"create_support_case(name, from_email, problem, screenshot=None, addtl_info='')")),Object(s.b)("p",null,"create an email with the information received"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param screenshot:")," The base64 text of the screenshot itself, prefixed with data=image/png"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param addtl_info:")," A JSON-encoded string of a dict with additional information to include in the support request")),Object(s.b)("h2",{id:"counterwallet_iofeeds-module"},"counterwallet_iofeeds Module"),Object(s.b)("h3",{id:"get_num_users_online"},"get_num_users_online"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_num_users_online()")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," The current number of users attached to the server's chat feed\n:rtype: Int")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"deprecated: 1.6.3")),Object(s.b)("h3",{id:"is_chat_handle_in_use"},"is_chat_handle_in_use"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"is_chat_handle_in_use(handle)")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"deprecated: 1.6.3")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," Boolean")),Object(s.b)("h3",{id:"get_chat_handle"},"get_chat_handle"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_chat_handle(wallet_id)")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," {'handle', 'is_op', 'last_updated', 'banned_until'}")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"deprecated: 1.6.3")),Object(s.b)("h3",{id:"store_chat_handle"},"store_chat_handle"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"store_chat_handle(wallet_id, handle)")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"deprecated: 1.6.3")),Object(s.b)("h3",{id:"get_chat_history"},"get_chat_history"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_chat_history(start_ts=None, end_ts=None, handle=None, limit=1000)")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"deprecated: 1.6.3")),Object(s.b)("h3",{id:"is_wallet_online"},"is_wallet_online"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"is_wallet_online(wallet_id)")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," Boolean")),Object(s.b)("h2",{id:"transaction_stats-module"},"transaction_stats Module"),Object(s.b)("h3",{id:"get_transaction_stats"},"get_transaction_stats"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"get_transaction_stats(start_ts=None, end_ts=None)")),Object(s.b)("p",null,"This function returns the number of transactions in each 24 hour clock within the given time range, or the last 360 days if no time range is given."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param start_ts:")," Unix timestamp"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"param end_ts:")," Unix timestamp"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"return:")," The number of transactions in each time interval."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"rtype:")," [","[",Object(s.b)("inlineCode",{parentName:"li"},"unix timestamp *in milliseconds* (e.g. 1000 * a typical unix timestamp)"),", ",Object(s.b)("inlineCode",{parentName:"li"},"transaction count"),"]","]")),Object(s.b)("h2",{id:"api-changes"},"API Changes"),Object(s.b)("p",null,"This section documents any changes to the ",Object(s.b)("inlineCode",{parentName:"p"},"counterblock")," API, for version numbers where there were API-level modifications."),Object(s.b)("h3",{id:"120"},"1.2.0"),Object(s.b)("p",null,"Removed the following API calls:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"record_btc_open_order")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"cancel_btc_open_order"))),Object(s.b)("p",null,"Since BTC trading was removed from Counterwallet months ago, these calls are not necessary."),Object(s.b)("h3",{id:"110"},"1.1.0"),Object(s.b)("p",null,"Deprecated several redundant/unused functions for removal in a future version. Any code calling these functions should be re-written. Refer to the documentation of the individual functions for replacements."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"cancel_btc_open_order")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"get_asset_pair_market_info")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"get_base_quote_asset")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"get_chain_block_height")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"get_chat_history")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"get_market_price_summary")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"get_order_book_buysell")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"get_order_book_simple")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"is_chat_handle_in_use"))))}o.isMDXComponent=!0},126:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),o=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=o(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},_={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),p=o(a),d=n,u=p["".concat(i,".").concat(d)]||p[d]||_[d]||s;return a?r.a.createElement(u,l(l({ref:t},c),{},{components:a})):r.a.createElement(u,l({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,i=new Array(s);i[0]=d;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<s;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);