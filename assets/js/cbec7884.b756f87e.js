(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{117:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return d}));var r=n(3),a=n(7),i=(n(0),n(126)),o={title:"Using multisig with counterparty-server"},s={unversionedId:"advanced/advanced-usage/multisig",id:"advanced/advanced-usage/multisig",isDocsHomePage:!1,title:"Using multisig with counterparty-server",description:'"Bare Multisig" (i.e. not P2SH) is supported with Counterparty. This document shows you how to use it with counterparty-server on testnet.',source:"@site/docs/advanced/advanced-usage/multisig.md",slug:"/advanced/advanced-usage/multisig",permalink:"/Documentation/docs/advanced/advanced-usage/multisig",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/advanced/advanced-usage/multisig.md",version:"current",sidebar:"advanced",previous:{title:"How to send Counterparty assets in bulk",permalink:"/Documentation/docs/advanced/advanced-usage/sending-bulk"},next:{title:"Getting started",permalink:"/Documentation/docs/advanced/federated-node/getting-started"}},c=[{value:"Making a Multisig Tx",id:"making-a-multisig-tx",children:[]}],u={toc:c};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,'"Bare Multisig" (i.e. not P2SH) is supported with Counterparty. This document shows you how to use it with ',Object(i.b)("inlineCode",{parentName:"p"},"counterparty-server")," on testnet."),Object(i.b)("h3",{id:"making-a-multisig-tx"},"Making a Multisig Tx"),Object(i.b)("p",null,"An example testnet multi\u2010sig source transaction is tx hash ",Object(i.b)("em",{parentName:"p"},"e06d22276699de6ed1c5322133b0968114067ce833120bb9126182a1ad19de83")),Object(i.b)("p",null,"Here's how you can make a multisig transaction:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"\n  counterpartyd.py --unconfirmed --testnet --database-file=test.db send --source='1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mfzSPkV7kAYma5oxZ37pHkw9qtwAEQx8Wy_2' --destination='mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc' --quantity=.1337 --asset=XCP\n\n")),Object(i.b)("p",null,"So that's a 1-of-2 multisig address that the 0.1337 XCP would be sent to.\xa0"),Object(i.b)("p",null,"The multisig addresses are represented as such a string as\xa0'{m}",Object(i.b)("em",{parentName:"p"},"{address}"),"{address}",Object(i.b)("em",{parentName:"p"},"{address}"),"{n}', where the addresses\xa0(pubkeyhashes)\xa0are sorted\xa0alphabetically/numerically.\xa0"),Object(i.b)("p",null,"1-of-2, 2-of-2, 1-of-3, 2-of-3 and 3-of-3\xa0are supported at the moment.\xa0"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"NOTE:"),"\xa0Each address in a multisig source must have already made\xa0",Object(i.b)("strong",{parentName:"em"},"at least one non-multisig transaction"),"\xa0in the blockchain, for counterpartyd to be able to retrieve its pubkey from the blockchain."),"  "),Object(i.b)("p",null,"You can sign transactions with ",Object(i.b)("inlineCode",{parentName:"p"},"bitcoind signrawtransaction"),"; broadcast\xa0with ",Object(i.b)("inlineCode",{parentName:"p"},"sendrawtransaction"),"."))}d.isMDXComponent=!0},126:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),d=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=d(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=d(n),b=r,m=l["".concat(o,".").concat(b)]||l[b]||p[b]||i;return n?a.a.createElement(m,s(s({ref:t},u),{},{components:n})):a.a.createElement(m,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);